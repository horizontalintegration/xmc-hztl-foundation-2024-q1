// Global
import type { Meta, StoryObj } from '@storybook/react';

// Lib
import { expandObj, flattenObj } from 'lib/object-parser';

// Local
import Modal, { ModalProps } from 'components/authorable/shared/hztl-page-content/Modal';
import defaultData from './Modal.mock-data';
import ButtonWrapper from 'helpers/SitecoreWrappers/ButtonWrapper/ButtonWrapper';

const meta: Meta<ModalProps> = {
  argTypes: {
    'fields.label.value': {
      description: 'The `aria-label` of the modal.',
      table: {
        category: 'fields',
      },
    },
    'fields.openOnLoad.value': {
      control: 'boolean',
      defaultValue: false,
      description: 'A flag that determines if the modal should be opened on page load.',
      table: {
        category: 'fields',
      },
    },
    'fields.size.value': {
      control: 'select',
      defaultValue: 'large',
      description: 'The size variant of the modal.',
      options: ['extra-large', 'large', 'medium', 'small', 'fluid'],
      table: {
        category: 'fields',
      },
    },
    'fields.title.value': {
      control: 'select',
      description: 'A `ReactNode` representing the title of the modal.',
      mapping: {
        Title: 'Modal Title',
        'Title with Markup': (
          <>
            Modal Title with HTML Markup<sup>Â®</sup>
          </>
        ),
      },
      options: ['Title', 'Title with Markup'],
      table: {
        category: 'fields',
      },
    },
    'fields.trigger.value': {
      control: 'select',
      description: "A `ReactNode` representing the content of the modal's trigger.",
      mapping: {
        Anchor: <a>A text link that opens a modal.</a>,
        Button: (
          <ButtonWrapper
            ctaVariant="primary"
            id="modal-2845070A-AEBD-4B45-A59D-88269B081204-button"
            text="Modal Trigger"
            title="Modal Trigger"
            type="button"
          />
        ),
      },
      options: ['Anchor', 'Button'],
      table: {
        category: 'fields',
      },
    },
    uid: {
      description:
        "A unique ID generated by Sitecore that will serve as the basis for the modal's ID attribute.",
    },
    /* eslint-disable  @typescript-eslint/no-explicit-any */
  } as any,
  component: Modal,
  parameters: { controls: { sort: 'requiredFirst' } },
  title: 'Components/Authorable/Shared/hztl-page-content/Modal',
};

export default meta;

type Story = StoryObj<ModalProps>;

export const Default: Story = {
  args: {
    ...flattenObj(defaultData),
  },
  name: 'Default',
  render: (args) => {
    return (
      <>
        <a href={`#modal-${defaultData?.uid}`}>Remote Trigger</a>
        <Modal {...(expandObj({ ...args }) as ModalProps)} />
      </>
    );
  },
};
